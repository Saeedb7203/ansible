- name: Update /etc/hosts with inventory IPs and hostnames
  blockinfile:
    path: /etc/hosts
    block: |
      {% for host in groups['all'] %}
      {{ hostvars[host]['ansible_host'] }} {{ hostvars[host]['inventory_hostname'] }}
      {% endfor %}
    marker: "# {mark} ANSIBLE MANAGED BLOCK - HOSTS"
    state: present

- name: Generate etcd-cluster string dynamically
  set_fact:
    initial_cluster: >-
      {% for host in groups['db_servers'] -%}
      {{ hostvars[host]['inventory_hostname'] }}=http://{{ hostvars[host]['ansible_host'] }}:{{ etcd_comm_port }}{% if not loop.last %},{% endif %}
      {%- endfor %}

- name: install Percona-release package 
  tags: postgres,db,etcd,patroni
  command: percona-release setup ppg{{version}}
  # environment: "{{proxy_env}}"
  when: ansible_distribution == "Ubuntu" and percona_package_install


- name: Install some Python and auxiliary packages to help with Patroni and etcd
  tags: postgres,db,etcd,patroni
  apt:
    name:
    - python3-pip
    - python3-dev
    - binutils
    - percona-patroni
    - etcd
    - etcd-server
    - etcd-client
    - percona-pgbackrest
  # environment: "{{proxy_env}}"
  when: ansible_distribution == "Ubuntu" and percona_package_install

- name: stop etcd server
  service: name=etcd state=stopped enabled=false

- name: stop patroni server
  service: name=patroni state=stopped enabled=false

- name: stop postgres server
  service: name=postgresql state=stopped enabled=false


- name: remove the data directory to force it to initialize a new Postgres cluster instance.
  command: rm -rf /var/lib/postgresql/{{version}}/main


- name: Config nodes
  tags: conf
  template:
    src: etcd.conf.j2
    dest: /etc/etcd/etcd.conf.yaml

- name: start etcd server
  service: name=etcd state=started enabled=true
  register: start_output




